---

# Variables setup
- name: Include os-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

# Makes sure that the repo cache is fresh
- name: Update APT cache.
  apt:
    update_cache: true
  when: ansible_os_family == 'Debian'
  changed_when: false

# Install python-pip
- include_tasks: setup-python-pip.yml

# Install the Docker repository
- include_tasks: "repo-{{ ansible_os_family }}.yml"
  when: not skip_repo

# Install the Docker dependencies
- name: Install Docker dependencies.
  package:
    name: "{{ docker_dependencies }}"
    state: present
  when: not skip_containerd or not skip_engine

# Install containerd
- include_tasks: setup-containerd.yml
  when: not skip_containerd

# Install the Docker Engine
- include_tasks: setup-docker-engine.yml
  when: not skip_engine

# Install the Docker CLI
- include_tasks: setup-docker-cli.yml
  when: not skip_cli

# Setup the Docker Swarm Cluster
- block:
    - include_tasks: setup-swarm-cluster.yml
    - include_tasks: setup-swarm-labels.yml
  when: not skip_swarm

# Adds the Docker admin users to the Docker group
- include_tasks: setup-docker-group.yml
  when: not skip_group

# Install docker-py
- include_tasks: setup-docker-py.yml
  when: not skip_docker_py

# Install docker-compose
- include_tasks: setup-docker-compose.yml
  when: not skip_docker_compose

#finale
- name: chiudo
  command: sudo rm -rf /var/lib/docker
  register: chiudo
  changed_when: false
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

- name: riapro
  command: sudo dockerd --tlsverify --tlscacert=certs/ca.pem --tlscert=certs/server-cert.pem --tlskey=certs/server-key.pem -H=0.0.0.0:2376
  register: riapro
  changed_when: false
  when: "inventory_hostname == groups['docker_swarm_manager'][0]"

